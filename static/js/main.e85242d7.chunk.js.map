{"version":3,"sources":["logo.svg","components/Create.js","components/Todo.js","components/List.js","App.js","reportWebVitals.js","index.js"],"names":["Create","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","wval","target","className","onSubmit","preventDefault","id","Math","floor","random","text","onChange","name","placeholder","ref","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","isComplete","onClick","List","setTodos","test","newTodos","updateTodos","removeAr","filter","newvalue","prev","item","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e85242d7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nfunction Create(props) {\r\n  const [input, setInput] = useState(props.edit ? props.edit.value : \"\");\r\n  const inputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n  });\r\n\r\n  const handleChange = e => {\r\n    const wval = e.target.value;\r\n    setInput(wval);\r\n  };\r\n  const handleInput = e => {\r\n    e.preventDefault();\r\n    props.onSubmit({\r\n      id: Math.floor(Math.random() * 10000),\r\n      text: input\r\n    });\r\n    setInput(\"\");\r\n  };\r\n  return (\r\n    <form className=\"todo-form\" onSubmit={handleInput}>\r\n      {props.edit ? (\r\n        <>\r\n          <input\r\n            className=\"todo-input edit\"\r\n            onChange={handleChange}\r\n            name=\"input\"\r\n            placeholder=\"Update Record\"\r\n            value={input}\r\n            ref={inputRef}\r\n          />\r\n          <button className=\"todo-button edit\">Update</button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <input\r\n            className=\"todo-input\"\r\n            onChange={handleChange}\r\n            name=\"input\"\r\n            placeholder=\"Enter text\"\r\n            value={input}\r\n            ref={inputRef}\r\n          />\r\n          <button className=\"todo-button\">Add Todolist</button>\r\n        </>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Create;\r\n","import React, { useState } from \"react\";\r\nimport Create from \"./Create\";\r\nimport { RiCloseCircleLine } from \"react-icons/ri\";\r\nimport { TiEdit } from \"react-icons/ti\";\r\n\r\nexport default function Todo({ todos, completeTodo, removeTodo, updateTodo }) {\r\n  const [edit, setEdit] = useState({\r\n    id: null,\r\n    value: \"\"\r\n  });\r\n  const submitUpdate = value => {\r\n    updateTodo(edit.id, value);\r\n    setEdit({\r\n      id: null,\r\n      value: \"\"\r\n    });\r\n  };\r\n  if (edit.id) {\r\n    return <Create edit={edit} onSubmit={submitUpdate} />;\r\n  }\r\n  return todos.map((todo, index) => {\r\n    return (\r\n      <div\r\n        className={todo.isComplete ? \"todo-row complete\" : \"todo-row\"}\r\n        key={index}\r\n      >\r\n        <div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n          {todo.text}\r\n        </div>\r\n        <div className=\"icons\">\r\n          <RiCloseCircleLine\r\n            onClick={() => removeTodo(todo.id)}\r\n            className=\"delete-icon\"\r\n          />\r\n          <TiEdit\r\n            onClick={() => setEdit({ id: todo.id, value: todo.text })}\r\n            className=\"edit-icon\"\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Create from \"./Create\";\r\nimport Todo from \"./Todo\";\r\n\r\nfunction List() {\r\n  const [todos, setTodos] = useState([]); // Passing empty array\r\n\r\n  const addTodo = todo => {\r\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n      return;\r\n    }\r\n\r\n    const newTodos = [todo, ...todos];\r\n\r\n    setTodos(newTodos);\r\n    // console.log(newTodos);\r\n  };\r\n\r\n  const updateTodo = (id, newvalue) => {\r\n    if (!newvalue.text || /^\\s*$/.test(newvalue.text)) {\r\n      return;\r\n    }\r\n\r\n    setTodos(prev => prev.map(item => (item.id === id ? newvalue : item)));\r\n  };\r\n  const removeTodo = id => {\r\n    const removeAr = [...todos].filter(todo => todo.id != id);\r\n    setTodos(removeAr);\r\n  };\r\n\r\n  const completeTodo = id => {\r\n    let updateTodos = todos.map(todo => {\r\n      if (todo.id === id) {\r\n        todo.isComplete = !todo.isComplete;\r\n      }\r\n      return todo;\r\n    });\r\n    setTodos(updateTodos);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>What's the plan today</h1>\r\n      <Create onSubmit={addTodo} />\r\n      <Todo\r\n        todos={todos}\r\n        completeTodo={completeTodo}\r\n        removeTodo={removeTodo}\r\n        updateTodo={updateTodo}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nexport default List;\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React from \"react\";\nimport List from \"./components/List\";\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n      <List />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}